{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\csgray\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \CocoaLigature0 \
=== INTRAEXTRA PROJECT CONTEXT ===\
\
=== PROJECT STRUCTURE ===\
src/App.tsx\
src/main.tsx\
src/types/notifications.ts\
src/types/operations.ts\
src/types/index.ts\
src/types/roi.ts\
src/App.test.tsx\
src/utils/createUserProfile.ts\
src/utils/setupUserProfile.ts\
src/components/roi/CompareTab.tsx\
src/components/roi/RevenueTab.tsx\
src/components/roi/ROI3.tsx\
src/components/roi/CostsTab.tsx\
src/components/clients/ClientProfile.tsx\
src/components/clients/CreateClientModal.tsx\
src/components/clients/ClientsPage.tsx\
src/components/ui/LoadingSpinner.tsx\
src/components/ui/Toast.tsx\
src/components/settings/InputFieldsPage.tsx\
src/components/settings/SystemSettingsPage.tsx\
src/components/settings/SettingsHoldingPage.tsx\
src/components/settings/UserProfilePage.tsx\
src/components/settings/SettingsPage.tsx\
src/components/settings/ProfileSettingsPage.tsx\
src/components/forms/UserForm.tsx\
src/components/forms/ClientForm.tsx\
src/components/forms/ProjectForm.tsx\
src/components/sales/SalesPipeline.tsx\
src/components/sales/OpportunityDetails.tsx\
src/components/sales/OpportunityList.tsx\
\
=== DEPENDENCIES ===\
  "dependencies": \{\
    "@hookform/resolvers": "^5.1.1",\
    "@supabase/supabase-js": "^2.52.0",\
    "@types/papaparse": "^5.3.16",\
    "chart.js": "^4.5.0",\
    "date-fns": "^4.1.0",\
    "lucide-react": "^0.525.0",\
    "papaparse": "^5.5.3",\
    "react": "^18.3.1",\
    "react-chartjs-2": "^5.3.0",\
    "react-dom": "^18.3.1",\
    "react-hook-form": "^7.60.0",\
    "react-hot-toast": "^2.5.2",\
    "zod": "^3.23.8"\
  \},\
  "devDependencies": \{\
    "@eslint/js": "^9.9.1",\
    "@types/react": "^18.3.5",\
    "@types/react-dom": "^18.3.0",\
    "@vitejs/plugin-react": "^4.3.1",\
    "autoprefixer": "^10.4.18",\
\
=== CURRENT TYPES ===\
export interface Client \{\
  id: string;\
  name: string;\
  email: string;\
  phone?: string;\
  company: string;\
  classification: 'Canopy' | 'Direct' | 'Partner' | 'Vendor';\
  created_at: string;\
  updated_at: string;\
\}\
\
export interface Project \{\
  id: string;\
  project_id: string;\
  project_code: string;  // Unique Project Identification Code (e.g., UK-0001)\
  client_id: string;\
  client?: Client;\
  event_location: string;\
  event_start_date: string;\
  event_end_date: string;\
  expected_attendance: number;\
  event_type: 'Conference' | 'Festival' | 'Exhibition' | 'Sports' | 'Corporate' | 'Other';\
  \
  // Additional metadata fields\
  onsite_start_date?: string;\
  onsite_end_date?: string;\
  show_start_date?: string;\
  show_end_date?: string;\
  voucher_sale_start?: string;\
  voucher_sale_end?: string;\
  topup_start?: string;\
  topup_end?: string;\
  refund_window_start?: string;\
  refund_window_end?: string;\
  delivery_address?: string;\
  delivery_contact_name?: string;\
  delivery_contact_phone?: string;\
  delivery_contact_email?: string;\
  wristband_order_deadline?: string;\
  load_in_date?: string;\
  load_out_date?: string;\
  qr_code_url?: string;\
  \
  // Project status and phase\
  current_phase: number;\
  phase_progress: number;\
  status: 'Active' | 'Completed' | 'On Hold' | 'Cancelled';\
  \
  created_at: string;\
  updated_at: string;\
\}\
\
export interface DocumentTemplate \{\
  id: string;\
  name: string;\
  description: string;\
  category: 'proposal' | 'contract' | 'custom';\
  template_url?: string;\
  created_at: string;\
\}\
\
export interface ProjectDocument \{\
  id: string;\
  project_id: string;\
  template_id?: string;\
  document_name: string;\
  document_url: string;\
  document_type: string;\
  file_size: number;\
  uploaded_by: string;\
  created_at: string;\
\}\
\
export interface ProjectPhase \{\
  id: number;\
  name: string;\
  description: string;\
  order: number;\
\}\
\
// Sales Pipeline Types\
export interface Opportunity \{\
  id: string;\
  company_name: string;\
  event_name: string;\
  deal_value: number;\
  currency: string;\
  stage: OpportunityStage;\
  lead_score: number;\
  temperature: 'Hot' | 'Warm' | 'Cold';\
  client_tier: ClientTier;\
  event_type: string;\
  owner_id: string;\
  owner?: User;\
  event_date?: string;\
  decision_date?: string;\
  win_probability: number;\
  created_project_id?: string;\
  is_previous_client?: boolean;\
  budget_confirmed?: boolean;\
  multiple_events?: boolean;\
  referral_source?: string;\
  decision_maker_engaged?: boolean;\
  contract_link?: string;\
  contract_signed?: boolean;\
  last_activity_date?: string;\
  created_at: string;\
  updated_at: string;\
\}\
\
export type OpportunityStage = \
  | 'Contacted'\
  | 'Qualified'\
  | 'First Meet Scheduled'\
  | 'Proposal Sent'\
  | 'Negotiations'\
  | 'Contract Signature'\
  | 'Kickoff'\
  | 'Operations';\
\
export type ClientTier = 'Seed' | 'Sapling' | 'Canopy' | 'Jungle' | 'Rainforest';\
\
export interface OpportunityActivity \{\
  id: string;\
  opportunity_id: string;\
  activity_type: 'Email' | 'Call' | 'Meeting' | 'Note';\
  subject: string;\
  description: string;\
  duration?: number;\
  participants?: string[];\
  created_by: string;\
  created_at: string;\
\}\
\
export interface OpportunityStageHistory \{\
  id: string;\
  opportunity_id: string;\
  from_stage: OpportunityStage;\
  to_stage: OpportunityStage;\
  changed_by: string;\
  changed_at: string;\
  reason?: string;\
\}\
\
export interface LeadScoringFactor \{\
  id: string;\
  opportunity_id: string;\
  factor_type: string;\
  points: number;\
  calculated_at: string;\
\}\
\
export interface User \{\
  id: string;\
  name: string;\
  email: string;\
  role: string;\
  created_at: string;\
\}\
\
export interface PipelineMetrics \{\
  total_opportunities: number;\
  total_value: number;\
  conversion_rate: number;\
  average_deal_size: number;\
  stage_distribution: Record<OpportunityStage, number>;\
  temperature_distribution: Record<'Hot' | 'Warm' | 'Cold', number>;\
\}\
\
// Re-export ROI types\
export * from './roi';\
=== AUTH SETUP ===\
useAuth.ts not found - checking other locations...\
\
=== SUPABASE SETUP ===\
import \{ createClient \} from '@supabase/supabase-js'\
\
const supabaseUrl = import.meta.env.VITE_SUPABASE_URL\
const supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY\
\
if (!supabaseUrl || !supabaseAnonKey) \{\
  throw new Error('Missing Supabase environment variables')\
\}\
\
export const supabase = createClient(supabaseUrl, supabaseAnonKey, \{\
  auth: \{\
    autoRefreshToken: true,\
    persistSession: true,\
    detectSessionInUrl: true\
  \}\
\})\
\
// Helper functions for authentication\
export const auth = \{\
  signUp: async (email: string, password: string, metadata?: any) => \{\
    return await supabase.auth.signUp(\{\
      email,\
      password,\
      options: \{\
        data: metadata\
      \}\
    \})\
  \},\
\
  signIn: async (email: string, password: string) => \{\
    return await supabase.auth.signInWithPassword(\{\
      email,\
      password\
    \})\
  \},\
\
  signOut: async () => \{\
    return await supabase.auth.signOut()\
  \},\
\
  getCurrentUser: async () => \{\
    const \{ data: \{ user \} \} = await supabase.auth.getUser()\
    return user\
  \},\
\
  onAuthStateChange: (callback: (user: any) => void) => \{\
    return supabase.auth.onAuthStateChange((event, session) => \{\
      callback(session?.user || null)\
    \})\
  \}\
\}\
\
// Export auth methods directly from supabase\
export \{ supabase as default \}\
\
// User profile management functions\
export async function getUserProfile(userId?: string) \{\
  try \{\
    const targetUserId = userId || (await auth.getCurrentUser())?.id;\
    if (!targetUserId) return null;\
\
    const \{ data, error \} = await supabase\
      .from('user_profiles')\
      .select(`\
        *,\
        role:user_roles!inner(\
          id,\
          role_type,\
          role_level,\
          assigned_by,\
          assigned_at,\
          is_active\
        ),\
        preferences:user_preferences(*)\
      `)\
      .eq('id', targetUserId)\
      .eq('user_roles.is_active', true)\
      .single();\
\
    if (error) \{\
      console.error('Error fetching user profile:', error);\
      return null;\
    \}\
\
    return \{\
      ...data,\
      role: data.role?.[0] || null,\
      preferences: data.preferences?.[0] || null\
    \};\
  \} catch (error) \{\
    console.error('Failed to get user profile:', error);\
    return null;\
  \}\
\}\
\
export async function updateUserProfile(profileData: any) \{\
  try \{\
    const user = await auth.getCurrentUser();\
    if (!user) throw new Error('No authenticated user');\
\
    const \{ data, error \} = await supabase\
      .from('user_profiles')\
      .update(\{\
        ...profileData,\
        updated_at: new Date().toISOString()\
      \})\
      .eq('id', user.id)\
      .select()\
      .single();\
\
    if (error) throw error;\
    return data;\
  \} catch (error) \{\
    console.error('Failed to update user profile:', error);\
    throw error;\
  \}\
\}\
\
// Helper function to get user role\
export const getUserRole = async (userId: string) => \{\
  const \{ data, error \} = await supabase\
    .from('platform_user_roles')\
    .select('role_level')\
    .eq('user_id', userId)\
    .single()\
  \
  if (error) \{\
    console.error('Error fetching user role:', error)\
    return 'user' // default role\
  \}\
  \
  return data?.role_level || 'user'\
\}\
\
// Helper function to check if user is master\
export const isMasterUser = async (userId: string) => \{\
  const role = await getUserRole(userId)\
  return role === 'master'\
\}\
\
// Database helpers with error handling\
export async function getClients() \{\
  try \{\
    const \{ data, error \} = await supabase\
      .from('clients')\
      .select('*')\
      .order('created_at', \{ ascending: false \});\
\
    if (error) \{\
      console.error('Error fetching clients:', error);\
      // Return empty array if table doesn't exist\
      if (error.message?.includes('not found') || error.message?.includes('does not exist')) \{\
        console.warn('Clients table not found, returning empty array');\
        return [];\
      \}\
      throw error;\
    \}\
    return data || [];\
  \} catch (error) \{\
    console.error('Failed to fetch clients:', error);\
    return [];\
  \}\
\}\
\
export async function createClientRecord(clientData: any) \{\
  try \{\
    const \{ data, error \} = await supabase\
      .from('clients')\
      .insert([\{\
        ...clientData,\
        created_at: new Date().toISOString(),\
        updated_at: new Date().toISOString()\
      \}])\
      .select()\
      .single();\
\
    if (error) throw error;\
    return data;\
  \} catch (error) \{\
    console.error('Failed to create client:', error);\
    throw error;\
  \}\
\}\
\
export async function getProjects() \{\
  try \{\
    const \{ data, error \} = await supabase\
      .from('projects')\
      .select(`\
        *,\
        client:clients(*)\
      `)\
      .order('created_at', \{ ascending: false \});\
\
    if (error) \{\
      console.error('Error fetching projects:', error);\
      // Return empty array if table doesn't exist\
      if (error.message?.includes('not found') || error.message?.includes('does not exist')) \{\
        console.warn('Projects table not found, returning empty array');\
        return [];\
      \}\
      throw error;\
    \}\
    return data || [];\
  \} catch (error) \{\
    console.error('Failed to fetch projects:', error);\
    return [];\
  \}\
\}\
\
export async function createProject(projectData: any) \{\
  try \{\
    const \{ data, error \} = await supabase\
      .from('projects')\
      .insert([\{\
        ...projectData,\
        created_at: new Date().toISOString(),\
        updated_at: new Date().toISOString()\
      \}])\
      .select()\
      .single();\
\
    if (error) throw error;\
    return data;\
  \} catch (error) \{\
    console.error('Failed to create project:', error);\
    throw error;\
  \}\
\}\
\
// Sales pipeline functions\
export async function moveOpportunityStage(opportunityId: string, newStage: string) \{\
  try \{\
    const \{ data, error \} = await supabase\
      .from('opportunities')\
      .update(\{ \
        stage: newStage,\
        updated_at: new Date().toISOString()\
      \})\
      .eq('id', opportunityId)\
      .select()\
      .single();\
\
    if (error) throw error;\
    return data;\
  \} catch (error) \{\
    console.error('Failed to move opportunity stage:', error);\
    throw error;\
  \}\
\}\
\
export async function getOpportunities() \{\
  try \{\
    const \{ data, error \} = await supabase\
      .from('opportunities')\
      .select('*')\
      .order('created_at', \{ ascending: false \});\
\
    if (error) \{\
      console.error('Error fetching opportunities:', error);\
      // Return empty array if table doesn't exist\
      if (error.message?.includes('not found') || error.message?.includes('does not exist')) \{\
        console.warn('Opportunities table not found, returning empty array');\
        return [];\
      \}\
      throw error;\
    \}\
    return data || [];\
  \} catch (error) \{\
    console.error('Failed to fetch opportunities:', error);\
    return [];\
  \}\
\}\
\
export async function createOpportunity(opportunityData: any) \{\
  try \{\
    const \{ data, error \} = await supabase\
      .from('opportunities')\
      .insert([\{\
        ...opportunityData,\
        created_at: new Date().toISOString(),\
        updated_at: new Date().toISOString()\
      \}])\
      .select()\
      .single();\
\
    if (error) throw error;\
    return data;\
  \} catch (error) \{\
    console.error('Failed to create opportunity:', error);\
    throw error;\
  \}\
\}\
\
export async function updateOpportunity(opportunityId: string, updates: any) \{\
  try \{\
    const \{ data, error \} = await supabase\
      .from('opportunities')\
      .update(\{\
        ...updates,\
        updated_at: new Date().toISOString()\
      \})\
      .eq('id', opportunityId)\
      .select()\
      .single();\
\
    if (error) throw error;\
    return data;\
  \} catch (error) \{\
    console.error('Failed to update opportunity:', error);\
    throw error;\
  \}\
\}\
\
// User management functions\
export async function getUsers() \{\
  try \{\
    const \{ data, error \} = await supabase\
      .from('platform_user_roles')\
      .select('*');\
    \
    if (error) \{\
      console.warn('Users table not found, returning empty array');\
      return [];\
    \}\
    return data || [];\
  \} catch (error) \{\
    console.error('Failed to fetch users:', error);\
    return [];\
  \}\
\}\
\
export async function createUser(userData: any) \{\
  try \{\
    const \{ data, error \} = await supabase.auth.signUp(\{\
      email: userData.email,\
      password: userData.password,\
      options: \{\
        data: userData.metadata\
      \}\
    \});\
    \
    if (error) throw error;\
    return data;\
  \} catch (error) \{\
    console.error('Failed to create user:', error);\
    throw error;\
  \}\
\}\
\
// Lead scoring\
export async function calculateLeadScore(opportunityData: any) \{\
  let score = 0;\
  \
  // Budget confirmed\
  if (opportunityData.budget_confirmed) score += 20;\
  \
  // Decision maker engaged\
  if (opportunityData.decision_maker_engaged) score += 25;\
  \
  // Previous client\
  if (opportunityData.is_previous_client) score += 15;\
  \
  // Multiple events potential\
  if (opportunityData.multiple_events) score += 10;\
  \
  // Stage-based scoring\
  const stageScores: Record<string, number> = \{\
    'Contacted': 5,\
    'Qualified': 10,\
    'First Meet Scheduled': 15,\
    'Proposal Sent': 20,\
    'Negotiations': 25,\
    'Contract Signature': 30\
  \};\
  score += stageScores[opportunityData.stage] || 0;\
  \
  return Math.min(score, 100); // Cap at 100\
\}\
\
// Opportunity activities\
export async function getOpportunityActivities(opportunityId: string) \{\
  try \{\
    const \{ data, error \} = await supabase\
      .from('opportunity_activities')\
      .select('*')\
      .eq('opportunity_id', opportunityId)\
      .order('created_at', \{ ascending: false \});\
    \
    if (error) \{\
      console.warn('Activities not found, returning empty array');\
      return [];\
    \}\
    return data || [];\
  \} catch (error) \{\
    console.error('Failed to fetch activities:', error);\
    return [];\
  \}\
\}\
\
export async function createOpportunityActivity(activityData: any) \{\
  try \{\
    const \{ data, error \} = await supabase\
      .from('opportunity_activities')\
      .insert([\{\
        ...activityData,\
        created_at: new Date().toISOString()\
      \}])\
      .select()\
      .single();\
    \
    if (error) \{\
      // If table doesn't exist, just return the data without saving\
      console.warn('Could not save activity:', error);\
      return activityData;\
    \}\
    return data;\
  \} catch (error) \{\
    console.error('Failed to create activity:', error);\
    return activityData;\
  \}\
\}\
\
// Convert opportunity to project\
export async function convertOpportunityToProject(opportunityId: string) \{\
  try \{\
    // Get the opportunity\
    const \{ data: opportunity, error: oppError \} = await supabase\
      .from('opportunities')\
      .select('*')\
      .eq('id', opportunityId)\
      .single();\
    \
    if (oppError) throw oppError;\
    \
    // Create a project from the opportunity\
    const projectData = \{\
      project_id: `PR-$\{opportunity.event_name\}-$\{Date.now()\}`,\
      event_location: opportunity.event_location || 'TBD',\
      event_type: opportunity.event_type || 'Conference',\
      expected_attendance: 1000,\
      status: 'Active',\
      event_start_date: opportunity.event_date,\
      event_end_date: opportunity.event_date\
    \};\
    \
    const newProject = await createProject(projectData);\
    \
    // Update opportunity with project reference\
    await updateOpportunity(opportunityId, \{\
      created_project_id: newProject.id,\
      stage: 'Operations'\
    \});\
    \
    return newProject;\
  \} catch (error) \{\
    console.error('Failed to convert opportunity:', error);\
    throw error;\
  \}\
\}\
\
export async function getPipelineMetrics() \{\
  try \{\
    const opportunities = await getOpportunities();\
    \
    // Calculate metrics from opportunities\
    const metrics = \{\
      total_opportunities: opportunities.length,\
      total_value: opportunities.reduce((sum, opp) => sum + (opp.deal_value || 0), 0),\
      conversion_rate: 0,\
      average_deal_size: opportunities.length > 0 \
        ? opportunities.reduce((sum, opp) => sum + (opp.deal_value || 0), 0) / opportunities.length \
        : 0,\
      stage_distribution: \{\} as Record<string, number>,\
      temperature_distribution: \{\
        Hot: 0,\
        Warm: 0,\
        Cold: 0\
      \} as Record<string, number>\
    \};\
    \
    // Count stage distribution\
    opportunities.forEach(opp => \{\
      metrics.stage_distribution[opp.stage] = (metrics.stage_distribution[opp.stage] || 0) + 1;\
      if (opp.temperature) \{\
        metrics.temperature_distribution[opp.temperature] = \
          (metrics.temperature_distribution[opp.temperature] || 0) + 1;\
      \}\
    \});\
    \
    // Calculate conversion rate (opportunities that reached contract stage)\
    const contractCount = opportunities.filter(opp => \
      opp.stage === 'Contract Signature' || opp.stage === 'Kickoff' || opp.stage === 'Operations'\
    ).length;\
    metrics.conversion_rate = opportunities.length > 0 \
      ? (contractCount / opportunities.length) * 100 \
      : 0;\
    \
    return metrics;\
  \} catch (error) \{\
    console.error('Failed to get pipeline metrics:', error);\
    return \{\
      total_opportunities: 0,\
      total_value: 0,\
      conversion_rate: 0,\
      average_deal_size: 0,\
      stage_distribution: \{\},\
      temperature_distribution: \{ Hot: 0, Warm: 0, Cold: 0 \}\
    \};\
  \}\
\}\
=== USER TABLE STRUCTURE ===\
/*\
  ROI Analysis Module (Supabase-safe)\
\
  Creates:\
    - roi_calculations\
    - revenue_streams\
    - cost_streams\
    - roi_templates\
    - roi_scenarios\
\
  Notes:\
    - Uses gen_random_uuid() (pgcrypto) for IDs\
    - References auth.users for created_by / approved_by\
    - Soft-creates a minimal projects table if missing\
    - Enables RLS with permissive policies for authenticated\
*/\
\
-- \uc0\u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \
-- Extensions\
-- \uc0\u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \
create extension if not exists pgcrypto;\
\
-- Ensure a projects table exists (id only if you don\'92t already have one)\
create table if not exists projects (\
  id uuid primary key default gen_random_uuid()\
);\
\
-- \uc0\u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \
-- ROI Calculations\
-- \uc0\u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \
create table if not exists roi_calculations (\
  id uuid primary key default gen_random_uuid(),\
  project_id uuid not null references projects(id) on delete cascade,\
\
  calculation_type text not null default 'quick'\
    check (calculation_type in ('quick','detailed','comprehensive')),\
  version integer not null default 1,\
  status text not null default 'draft'\
    check (status in ('draft','submitted','approved')),\
\
  -- Revenue totals\
  total_revenue_estimate numeric not null default 0,\
  total_revenue_forecast numeric not null default 0,\
  total_revenue_actual   numeric not null default 0,\
\
  -- Cost totals\
  total_costs_estimate numeric not null default 0,\
  total_costs_forecast numeric not null default 0,\
  total_costs_actual   numeric not null default 0,\
\
  -- Calculated metrics\
  margin_percentage numeric not null default 0,\
  roi_percentage    numeric not null default 0,\
\
  -- Approvals & audit\
  approved_by uuid references auth.users(id) on delete set null,\
  approved_at timestamptz,\
  created_by uuid references auth.users(id) on delete set null,\
  created_at timestamptz default now(),\
  updated_at timestamptz default now()\
);\
\
alter table roi_calculations enable row level security;\
\
create policy roi_calculations_select_auth\
  on roi_calculations for select\
  to authenticated using (true);\
\
create policy roi_calculations_all_auth\
  on roi_calculations for all\
  to authenticated using (true);\
\
-- \uc0\u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \
-- Revenue Streams\
-- \uc0\u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \
create table if not exists revenue_streams (\
  id uuid primary key default gen_random_uuid(),\
  roi_calculation_id uuid not null references roi_calculations(id) on delete cascade,\
\
  category text not null check (\
    category in (\
      'ticketing_mains','ticketing_addons','cashless','access_accreditation',\
      'wristbands_devices','plans_insurance','insights_data','commercial_modules'\
    )\
  ),\
  item_name text not null,\
  unit_price numeric not null default 0,\
  quantity integer not null default 0,\
  fee_percentage numeric not null default 0,\
  performance_percentage numeric not null default 100,\
\
  estimate_value  numeric not null default 0,\
  forecast_value  numeric not null default 0,\
  actual_value    numeric not null default 0,\
\
  enabled boolean default true,\
  created_at timestamptz default now(),\
  updated_at timestamptz default now()\
);\
\
alter table revenue_streams enable row level security;\
\
create policy revenue_streams_select_auth\
  on revenue_streams for select\
  to authenticated using (true);\
\
create policy revenue_streams_all_auth\
  on revenue_streams for all\
  to authenticated using (true);\
\
-- \uc0\u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \
-- Cost Streams\
-- \uc0\u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \
create table if not exists cost_streams (\
  id uuid primary key default gen_random_uuid(),\
  roi_calculation_id uuid not null references roi_calculations(id) on delete cascade,\
\
  category text not null check (category in ('hardware','staffing','logistics','development','misc')),\
  item_name text not null,\
  unit_cost numeric not null default 0,\
  quantity integer not null default 0,\
  days integer default 1,\
\
  estimate_value  numeric not null default 0,\
  forecast_value  numeric not null default 0,\
  actual_value    numeric not null default 0,\
\
  created_at timestamptz default now(),\
  updated_at timestamptz default now()\
);\
\
alter table cost_streams enable row level security;\
\
create policy cost_streams_select_auth\
  on cost_streams for select\
  to authenticated using (true);\
\
create policy cost_streams_all_auth\
  on cost_streams for all\
  to authenticated using (true);\
\
-- \uc0\u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \
-- ROI Templates\
-- \uc0\u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \
create table if not exists roi_templates (\
  id uuid primary key default gen_random_uuid(),\
  template_name text not null,\
  event_type text not null,\
  event_size text not null,\
  revenue_presets jsonb not null default '\{\}'::jsonb,\
  cost_presets    jsonb not null default '\{\}'::jsonb,\
  is_custom boolean default false,\
  created_by uuid references auth.users(id) on delete set null,\
  created_at timestamptz default now(),\
  constraint roi_templates_template_name_uk unique (template_name)\
);\
\
alter table roi_templates enable row level security;\
\
create policy roi_templates_select_auth\
  on roi_templates for select\
  to authenticated using (true);\
\
create policy roi_templates_all_auth\
  on roi_templates for all\
  to authenticated using (true);\
\
-- \uc0\u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \
-- ROI Scenarios\
-- \uc0\u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \
create table if not exists roi_scenarios (\
  id uuid primary key default gen_random_uuid(),\
  roi_calculation_id uuid not null references roi_calculations(id) on delete cascade,\
\
  scenario_type text not null check (scenario_type in ('best','expected','worst')),\
  attendance_variance        numeric default 0,\
  adoption_rate_variance     numeric default 0,\
  weather_impact             numeric default 0,\
  technical_issues_allowance numeric default 0,\
  currency_fluctuation       numeric default 0,\
\
  created_at timestamptz default now()\
);\
\
alter table roi_scenarios enable row level security;\
\
create policy roi_scenarios_select_auth\
  on roi_scenarios for select\
  to authenticated using (true);\
\
create policy roi_scenarios_all_auth\
  on roi_scenarios for all\
  to authenticated using (true);\
\
-- \uc0\u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \
-- Indexes\
-- \uc0\u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \
create index if not exists idx_roi_calculations_project_id on roi_calculations(project_id);\
create index if not exists idx_roi_calculations_status     on roi_calculations(status);\
create index if not exists idx_revenue_streams_calc_id     on revenue_streams(roi_calculation_id);\
create index if not exists idx_cost_streams_calc_id        on cost_streams(roi_calculation_id);\
create index if not exists idx_roi_scenarios_calc_id       on roi_scenarios(roi_calculation_id);\
\
-- \uc0\u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \
-- Seed ROI Templates (safe: no created_by, unique constraint guards duplicates)\
-- \uc0\u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \
insert into roi_templates (template_name, event_type, event_size, revenue_presets, cost_presets)\
values\
  (\
    'Conference Template - Small',\
    'Conference',\
    'Small (500-1000)',\
    '\{\
      "ticketing_mains": [\
        \{"name":"General Admission","price":50,"capacity":800,"fee":10,"performance":85\}\
      ],\
      "cashless": [\
        \{"name":"Transaction Fee","price":0.25,"transactions":5000,"fee":100,"performance":90\}\
      ]\
    \}'::jsonb,\
    '\{\
      "hardware":[\{"name":"Scanners","cost":50,"quantity":5,"days":3\}],\
      "staffing":[\{"name":"Technical Support","cost":200,"quantity":2,"days":3\}]\
    \}'::jsonb\
  ),\
  (\
    'Festival Template - Medium',\
    'Festival',\
    'Medium (1000-5000)',\
    '\{\
      "ticketing_mains": [\
        \{"name":"General Admission","price":75,"capacity":3000,"fee":10,"performance":90\}\
      ],\
      "wristbands_devices": [\
        \{"name":"Generic Wristbands","price":2,"quantity":3500,"fee":100,"performance":95\}\
      ]\
    \}'::jsonb,\
    '\{\
      "hardware":[\{"name":"Wristbands","cost":1.5,"quantity":3500,"days":1\}],\
      "staffing":[\{"name":"Event Crew","cost":150,"quantity":8,"days":4\}]\
    \}'::jsonb\
  )\
on conflict (template_name) do nothing;\
=== ROI COMPONENT (first 50 lines) ===\
import React, \{ useState, useEffect, useRef \} from 'react';\
import \{ \
  Calculator, \
  TrendingUp, \
  TrendingDown, \
  Download, \
  Edit, \
  Plus, \
  GripVertical,\
  Search,\
  X as Close,\
  AlertCircle as Warning,\
  Lightbulb,\
  Check as Done,\
  MoreVertical as Menu,\
  Megaphone as Campaign,\
  Info,\
  Receipt,\
  ShoppingCart,\
  Shield,\
  CreditCard,\
  Cable,\
  BarChart3,\
  Store,\
  Cpu,\
  CheckCircle,\
  DollarSign,\
  Package,\
  Users,\
  Wrench,\
  Code,\
  Grid3x3,\
  Upload,\
  PieChart,\
  CircleDot,\
  Activity,\
  Truck,\
  Tag,\
  ChevronDown,\
  ChevronUp,\
  Trash2\
\} from 'lucide-react';\
\
// Add CSS style for row actions\
const styles = `\
  .row-actions \{\
    opacity: 0;\
    transition: opacity 0.2s ease-in-out;\
  \}\
  tr:hover .row-actions \{\
\
=== APP STRUCTURE (first 30 lines) ===\
import React, \{ useState, useEffect \} from 'react';\
import \{ auth \} from './lib/supabase';\
import \{ LoginPage \} from './components/auth/LoginPage';\
import \{ Dashboard \} from './components/layout/Dashboard';\
import \{ Header \} from './components/layout/Header';\
import \{ ProjectView \} from './components/project/ProjectView';\
import \{ ProjectForm \} from './components/forms/ProjectForm';\
import \{ PhaseTracker \} from './components/project/PhaseTracker';\
import \{ DocumentManager \} from './components/project/DocumentManager';\
import \{ ProjectMetadata \} from './components/project/ProjectMetadata';\
import \{ SalesPipeline \} from './components/sales/SalesPipeline';\
import \{ Toast \} from './components/ui/Toast';\
import \{ Sidebar \} from './components/layout/Sidebar';\
import \{ SettingsHoldingPage \} from './components/settings/SettingsHoldingPage';\
import \{ TeamPage \} from './components/team/TeamPage';\
import \{ UserProfilePage \} from './components/settings/UserProfilePage';\
import \{ ProjectsList \} from './components/project/ProjectsList';\
import \{ AuthStatus \} from './components/debug/AuthStatus';\
import \{ GuardsPage \} from './components/guards/GuardsPage';\
import \{ ROI3 \} from './components/roi/ROI3';\
import \{ ClientsPage \} from './components/clients/ClientsPage';\
import \{ Project \} from './types';\
\
type TabId = 'projects' | 'sales' | 'roi' | 'operations' | 'clients' | 'marketing' | 'support' | 'analytics' | 'settings' | 'guards' | 'new-project' | 'team' | 'user-profile';\
\
function App() \{\
  const [isAuthenticated, setIsAuthenticated] = useState(false);\
  const [isLoading, setIsLoading] = useState(true);\
  const [user, setUser] = useState(null);\
\
\
=== CONTEXT GATHERING COMPLETE ===\
tyson_casfid@TYSONs-MacBook-Pro intra-extra-claude-sandbox % \
}